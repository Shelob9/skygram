name: Deploy Skygram Web

on: ["push"]

jobs:
  deploy_api:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Install Bun
      run: npm i bun -g

    - name: Install dependencies
      working-directory: skygram-api
      run: bun i

    - name: Deploy to Cloudflare
      working-directory: skygram-api
      run:
        bun run deploy
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
        CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
  deploy_web:
    runs-on: ubuntu-latest
    env:
      CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      CLOUDFLARE_ZONE_ID: ${{ secrets.CF_ZONE_ID }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Install Bun
      run: npm i bun -g

    - name: Install dependencies
      working-directory: skygram-web
      run: bun i

    - name: Build
      working-directory: skygram-web
      run: bun run build

    - name: Deploy Main
      if: github.ref == 'refs/heads/main'
      uses: cloudflare/wrangler-action@v3
      with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy dist --project-name=skygram-web  --commit-dirty=true

    - name: Deploy Not Main
      if: github.ref != 'refs/heads/main'
      uses: cloudflare/wrangler-action@v3
      with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy dist --project-name=skygram-web-${{ github.ref_name }} --commit-dirty=true

    - name: Purge cache
      if: github.ref == 'refs/heads/main'
      env:
        CF_ZONE_ID: ${{ secrets.CF_ZONE_ID }}
        CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
        CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      run: npx wrangler cache purge --name skygram-web --zone-id ${{ secrets.CF_ZONE_ID }} --api-token ${{ secrets.CF_API_TOKEN }}

    - name: Comment PR
      if: github.ref != 'refs/heads/main'
      uses: actions/github-script@v4
      env:
        SUBDOMAIN: skygram-web-${{ github.ref_name }}
        DOMAIN: imaginarymachines.workers.dev
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `Deployed at https://${process.env.SUBDOMAIN}.${process.env.DOMAIN}`)
          })

    - name: Comment PR (main)
      if: github.ref == 'refs/heads/main'
      uses: actions/github-script@v4
      env:
        DOMAIN: imaginarymachines.workers.dev
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `Deployed at https://skygram.app`})
          })
